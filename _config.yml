markdown: kramdown
pygments: true
permalink: /posts/:title
url: warahul.github.io
#baseurl: warahul.github.io    
exclude: [ Gemfile, Gemfile.lock]
description: "Personal blog of Rahul Wadbude."
googleAnalyticsKey: UA-71335999-1
gravatar_url: http://s.gravatar.com/avatar/a7aa9238f45f8960a195611c0e9cfbf6?s=80
author:
  name: Rahul Wadbude
  github: warahul
  linkedin: warahul
  se:
    quant: 6185
    cv: 30815
    mo: 40595
    math: 78654
    overall: 2792935
  bitbucket: warahul
  codeforces: warahul
  facebook: rahul.wadbude.3

research:
  - text: Natural Language Processing
    elements:
      - name: User Bias Removal in Fine Grained Sentiment Analysis
        # url: http://jmlr.org/papers/v14/tulabandhula13a.html
        text: |
         Major problem in current sentiment classification models is noise due to presence of user biases in reviews rating. We worked on two simple statistical methods to remove user bias noise to improve fine grained sentimental classification. We applied our methods on SNAP published Amazon Fine Food Reviews data-set and two major categories Electronics and Movies & TV of e-Commerce Reviews data-set. We gained improvement on standard evaluation metrics (rmse) for three commonly used feature representation after removing user bias compared to one without removing bias on task of fine grained sentiment analysis.




      - name: "BAT: An Unsupervised Approach for Construction of Domain-Specific Affect Lexicons"
        # url: http://jmlr.org/papers/v14/tulabandhula13a.html
        text: |
         Generic sentiment and emotion lexicons are widely used for the fine-grained analysis of people's affects and opinions on the world wide web. However, In order to accurately detect affect, there is often a need for domain intelligence, in order to disambiguate the meaning and the perceived interpretation of the same words in different contexts. We proposed an unsupervised approach the construction of domain-specific affect lexicons. Experiments on data sets show that our lexicon provides better coverage than standard lexicons on both short texts as well as long texts, and corresponds well with the affect scores assigned by human annotators in the Crime News domain. We have shown the utility of the our approach in detecting emotion on the SemEval 2007 Affect Corpus, where it outperforms the state of the art generic and domain-specific approaches with a higher F-score and a precision of over 70% 
  - text: Computer Vision
    elements:
      - name: Modifying DPPnet architecture for VQA
        # url: http://jmlr.org/papers/v14/tulabandhula13a.html
        text: |
         For the Course Project for the course Recent Advances in Computer Vision, we reproduced the results of "Image Question Answering using Convolutional Neural Network with Dynamic Parameter Prediction", an accepted paper of CVPR 2016. Also, integrated Hierachial co-attention network with DPPnet and got better performance then using DPPnet alone.
      - name: Vehicle detection and classification from traffic videos
        # url: http://jmlr.org/papers/v14/tulabandhula13a.html
        text: |
         For the Course Project for the course Machine Learning, we built a vehicle detector and classifier. First, we performed background subtraction to separate vehicles from background using MOG2/MOG/GMG modules of python-opencv. Then tried various features representations (SIFT, SURF, DNN) for images. Google BLVC model from Caffe framework was used to extract DNN features. Finally, classified vehicles into cars, bikes etc. using random forest, SVM etc. algorithms from python sklearn .
  - text: Machine Learning
    elements:
      - name: Multiple Kernel Learning
        # url: http://jmlr.org/papers/v14/tulabandhula13a.html
        text: |
         For our undergraduate project, we chose our area of research in Multiple Kernel Learning. First, we learnt about relative kernel hilbert space, multiple kernel learning algorithm and hierarchical kernel learning. For the experiments on image classification, we used Caltech multiclass object classification dataset with 102 categories. Used one-vs-rest SVM classifier with surf and convolutional deepnet (pretrained BVLC GoogleNet model) features. Caffe framework was used to extract DNN features. Finally, analyzed effects of linear, polynomial, rbf and sigmoid kernels using both features and svm classifier and implemented Simple MKL algorithm and analyzed effect of linear combination of kernels.
  - text: Others
    elements:
      - name: Designing Nachos
        # url: http://jmlr.org/papers/v14/tulabandhula13a.html
        text: |
         For the Course Project for the course operating systems, we implemented significant pieces of functionality within the Nachos using C++. First, we implemented UNIX System calls to perform system tasks like I/O, fork, exit etc. Then, we implemented FIFO, SJF and Priority based scheduling to schedule the processes for execution. Finally, implemented various synchronisation using Semaphores and Conditional Variables and implemented Demand Paging to allow system to work with large code/data and small RAM
      - name: Designing python3 to x86 compiler
        # url: http://jmlr.org/papers/v14/tulabandhula13a.html
        text: |
         For the Course Project for the course Compilers, we made a Fully functional compiler to convert python 3 source code to x86 assembly code. As part of that, implemented Lexer to tokenize Parser to parse Python3 source code using PLY module of python. Also, designed an IR Language and made a code generator to convert the IR Language to x86 assembly and implemented function calls, variable scoping, Recursion, Nesting of loops etc.
unused:
  - name: Googlecode
    url: https://code.google.com/u/112163485814726382683/
